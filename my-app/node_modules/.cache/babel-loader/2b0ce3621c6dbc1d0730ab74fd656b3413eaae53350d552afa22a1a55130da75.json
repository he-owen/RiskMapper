{"ast":null,"code":"var _jsxFileName = \"/Users/saakethpula/Documents/HenHacks 2025/henhacks2025/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useRef, useState } from \"react\";\n\n// const GOOGLE_MAPS_API_KEY = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n\n// const loadGoogleMapsScript = (): Promise<void> => {\n//   return new Promise((resolve, reject) => {\n//     if (window.google && window.google.maps) {\n//       resolve();\n//       return;\n//     }\n\n//     const existingScript = document.getElementById(\"googleMaps\");\n//     if (!existingScript) {\n//       const script = document.createElement(\"script\");\n//       script.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}`;\n//       script.id = \"googleMaps\";\n//       script.async = true;\n//       script.defer = true;\n//       script.onload = () => {\n//         if (window.google && window.google.maps) {\n//           resolve();\n//         } else {\n//           reject(new Error(\"Google Maps failed to load.\"));\n\n//         }\n//       };\n//       script.onerror = () => reject(new Error(\"Failed to load Google Maps script.\"));\n//       document.body.appendChild(script);\n//     } else {\n//       existingScript.onload = () => resolve();\n//     }\n//   });\n// };\n\n// const App = () => {\n//   const [mapLoaded, setMapLoaded] = useState(false);\n//   const mapRef = useRef<HTMLDivElement | null>(null);\n//   const mapInstanceRef = useRef<google.maps.Map | null>(null);\n//   const markerRef = useRef<google.maps.Marker | null>(null);\n\n//   useEffect(() => {\n//     loadGoogleMapsScript()\n//       .then(() => {\n//         setMapLoaded(true);\n//       })\n//       .catch((error) => console.error(error));\n//   }, []);\n\n//   useEffect(() => {\n//     if (mapLoaded && mapRef.current) {\n//       mapInstanceRef.current = new google.maps.Map(mapRef.current, {\n//         center: { lat: 37.7749, lng: -122.4194 }, // Default: San Francisco\n//         zoom: 10,\n//       });\n//     }\n//   }, [mapLoaded]);\n\n//   const locateUser = () => {\n//     if (navigator.geolocation) {\n//       navigator.geolocation.getCurrentPosition(\n//         (position) => {\n//           const userLocation = {\n//         lat: position.coords.latitude,\n//         lng: position.coords.longitude,\n//           };\n//           if (mapInstanceRef.current) {\n//         mapInstanceRef.current.setCenter(userLocation);\n//         mapInstanceRef.current.setZoom(14);\n\n//         // Remove old marker\n//         if (markerRef.current) {\n//           markerRef.current.setMap(null);\n//         }\n\n//         // Create new marker\n//         markerRef.current = new google.maps.Marker({\n//           position: userLocation,\n//           map: mapInstanceRef.current,\n//           title: \"You are here!\",\n//         });\n//           }\n//         },\n//         () => {\n//           alert(\"Error: Could not get location. Please enter your location manually.\");\n//           const locationInput = prompt(\"Enter your location (e.g., San Francisco, CA):\");\n//           if (locationInput) {\n//         const geocoder = new google.maps.Geocoder();\n//         geocoder.geocode({ address: locationInput }, (results, status) => {\n//           if (status === \"OK\" && results && results[0]) {\n//             const userLocation = results[0].geometry.location;\n//             if (mapInstanceRef.current) {\n//           mapInstanceRef.current.setCenter(userLocation);\n//           mapInstanceRef.current.setZoom(14);\n\n//           // Remove old marker\n//           if (markerRef.current) {\n//             markerRef.current.setMap(null);\n//           }\n\n//           // Create new marker\n//           markerRef.current = new google.maps.Marker({\n//             position: userLocation,\n//             map: mapInstanceRef.current,\n//             title: \"You are here!\",\n//           });\n//             }\n//           } else {\n//             alert(\"Error: Could not find the location.\");\n//           }\n//         });\n//           }\n//         }\n//       );\n//     } else {\n//       alert(\"Geolocation is not supported by your browser.\");\n//     }\n//   };\n\n//   return (\n//     <div style={{ textAlign: \"center\" }}>\n//       <h1>Google Maps in React</h1>\n//       <button onClick={locateUser} style={{ marginBottom: \"10px\", padding: \"10px\" }}>\n//         Find My Location\n//       </button>\n//       <div ref={mapRef} style={{ height: \"500px\", width: \"50%\" }}></div>\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Bell } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherAlert = () => {\n  _s();\n  const [alert, setAlert] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(\"https://api.weather.gov/alerts/active\").then(res => res.json()).then(data => {\n      if (data.alerts && data.alerts.length > 0) {\n        setAlert(data.alerts[0]);\n      }\n      setLoading(false);\n    }).catch(() => setLoading(false));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen p-4 bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-full max-w-lg shadow-lg\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold mb-4 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Bell, {\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), \" Weather Alert System\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading alerts...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this) : alert ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold text-red-600\",\n            children: alert.headline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-gray-700\",\n            children: alert.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: alert.instruction || \"#\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"block mt-4 text-blue-500 hover:underline\",\n            children: \"More Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No active weather alerts.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mt-4\",\n          onClick: () => window.location.reload(),\n          children: \"Refresh Alerts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherAlert, \"SgsBd4X5f7if1znMntbMQciRlSI=\");\n_c = WeatherAlert;\nexport default WeatherAlert;\nvar _c;\n$RefreshReg$(_c, \"WeatherAlert\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Button","Bell","jsxDEV","_jsxDEV","WeatherAlert","_s","alert","setAlert","loading","setLoading","fetch","then","res","json","data","alerts","length","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","headline","description","href","instruction","target","rel","onClick","window","location","reload","_c","$RefreshReg$"],"sources":["/Users/saakethpula/Documents/HenHacks 2025/henhacks2025/my-app/src/App.tsx"],"sourcesContent":["// import React, { useEffect, useRef, useState } from \"react\";\n\n// const GOOGLE_MAPS_API_KEY = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n\n// const loadGoogleMapsScript = (): Promise<void> => {\n//   return new Promise((resolve, reject) => {\n//     if (window.google && window.google.maps) {\n//       resolve();\n//       return;\n//     }\n\n//     const existingScript = document.getElementById(\"googleMaps\");\n//     if (!existingScript) {\n//       const script = document.createElement(\"script\");\n//       script.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}`;\n//       script.id = \"googleMaps\";\n//       script.async = true;\n//       script.defer = true;\n//       script.onload = () => {\n//         if (window.google && window.google.maps) {\n//           resolve();\n//         } else {\n//           reject(new Error(\"Google Maps failed to load.\"));\n          \n//         }\n//       };\n//       script.onerror = () => reject(new Error(\"Failed to load Google Maps script.\"));\n//       document.body.appendChild(script);\n//     } else {\n//       existingScript.onload = () => resolve();\n//     }\n//   });\n// };\n\n// const App = () => {\n//   const [mapLoaded, setMapLoaded] = useState(false);\n//   const mapRef = useRef<HTMLDivElement | null>(null);\n//   const mapInstanceRef = useRef<google.maps.Map | null>(null);\n//   const markerRef = useRef<google.maps.Marker | null>(null);\n\n//   useEffect(() => {\n//     loadGoogleMapsScript()\n//       .then(() => {\n//         setMapLoaded(true);\n//       })\n//       .catch((error) => console.error(error));\n//   }, []);\n\n//   useEffect(() => {\n//     if (mapLoaded && mapRef.current) {\n//       mapInstanceRef.current = new google.maps.Map(mapRef.current, {\n//         center: { lat: 37.7749, lng: -122.4194 }, // Default: San Francisco\n//         zoom: 10,\n//       });\n//     }\n//   }, [mapLoaded]);\n\n//   const locateUser = () => {\n//     if (navigator.geolocation) {\n//       navigator.geolocation.getCurrentPosition(\n//         (position) => {\n//           const userLocation = {\n//         lat: position.coords.latitude,\n//         lng: position.coords.longitude,\n//           };\n//           if (mapInstanceRef.current) {\n//         mapInstanceRef.current.setCenter(userLocation);\n//         mapInstanceRef.current.setZoom(14);\n\n//         // Remove old marker\n//         if (markerRef.current) {\n//           markerRef.current.setMap(null);\n//         }\n\n//         // Create new marker\n//         markerRef.current = new google.maps.Marker({\n//           position: userLocation,\n//           map: mapInstanceRef.current,\n//           title: \"You are here!\",\n//         });\n//           }\n//         },\n//         () => {\n//           alert(\"Error: Could not get location. Please enter your location manually.\");\n//           const locationInput = prompt(\"Enter your location (e.g., San Francisco, CA):\");\n//           if (locationInput) {\n//         const geocoder = new google.maps.Geocoder();\n//         geocoder.geocode({ address: locationInput }, (results, status) => {\n//           if (status === \"OK\" && results && results[0]) {\n//             const userLocation = results[0].geometry.location;\n//             if (mapInstanceRef.current) {\n//           mapInstanceRef.current.setCenter(userLocation);\n//           mapInstanceRef.current.setZoom(14);\n\n//           // Remove old marker\n//           if (markerRef.current) {\n//             markerRef.current.setMap(null);\n//           }\n\n//           // Create new marker\n//           markerRef.current = new google.maps.Marker({\n//             position: userLocation,\n//             map: mapInstanceRef.current,\n//             title: \"You are here!\",\n//           });\n//             }\n//           } else {\n//             alert(\"Error: Could not find the location.\");\n//           }\n//         });\n//           }\n//         }\n//       );\n//     } else {\n//       alert(\"Geolocation is not supported by your browser.\");\n//     }\n//   };\n\n//   return (\n//     <div style={{ textAlign: \"center\" }}>\n//       <h1>Google Maps in React</h1>\n//       <button onClick={locateUser} style={{ marginBottom: \"10px\", padding: \"10px\" }}>\n//         Find My Location\n//       </button>\n//       <div ref={mapRef} style={{ height: \"500px\", width: \"50%\" }}></div>\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Bell } from \"lucide-react\";\n\nconst WeatherAlert = () => {\n  const [alert, setAlert] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(\"https://api.weather.gov/alerts/active\")\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.alerts && data.alerts.length > 0) {\n          setAlert(data.alerts[0]);\n        }\n        setLoading(false);\n      })\n      .catch(() => setLoading(false));\n  }, []);\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen p-4 bg-gray-100\">\n      <Card className=\"w-full max-w-lg shadow-lg\">\n        <CardContent className=\"p-6\">\n          <h1 className=\"text-2xl font-bold mb-4 flex items-center\">\n            <Bell className=\"mr-2\" /> Weather Alert System\n          </h1>\n          {loading ? (\n            <p>Loading alerts...</p>\n          ) : alert ? (\n            <div>\n              <h2 className=\"text-xl font-semibold text-red-600\">\n                {alert.headline}\n              </h2>\n              <p className=\"mt-2 text-gray-700\">{alert.description}</p>\n              <a\n                href={alert.instruction || \"#\"}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"block mt-4 text-blue-500 hover:underline\"\n              >\n                More Details\n              </a>\n            </div>\n          ) : (\n            <p>No active weather alerts.</p>\n          )}\n          <Button className=\"mt-4\" onClick={() => window.location.reload()}>\n            Refresh Alerts\n          </Button>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default WeatherAlert;\n"],"mappings":";;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,QAAQ,sBAAsB;AACxD,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,SAASC,IAAI,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,uCAAuC,CAAC,CAC3CC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIA,IAAI,CAACC,MAAM,IAAID,IAAI,CAACC,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;QACzCT,QAAQ,CAACO,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;MAC1B;MACAN,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDQ,KAAK,CAAC,MAAMR,UAAU,CAAC,KAAK,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAKe,SAAS,EAAC,wEAAwE;IAAAC,QAAA,eACrFhB,OAAA,CAACL,IAAI;MAACoB,SAAS,EAAC,2BAA2B;MAAAC,QAAA,eACzChB,OAAA,CAACJ,WAAW;QAACmB,SAAS,EAAC,KAAK;QAAAC,QAAA,gBAC1BhB,OAAA;UAAIe,SAAS,EAAC,2CAA2C;UAAAC,QAAA,gBACvDhB,OAAA,CAACF,IAAI;YAACiB,SAAS,EAAC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,yBAC3B;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACJf,OAAO,gBACNL,OAAA;UAAAgB,QAAA,EAAG;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,GACtBjB,KAAK,gBACPH,OAAA;UAAAgB,QAAA,gBACEhB,OAAA;YAAIe,SAAS,EAAC,oCAAoC;YAAAC,QAAA,EAC/Cb,KAAK,CAACkB;UAAQ;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb,CAAC,eACLpB,OAAA;YAAGe,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAEb,KAAK,CAACmB;UAAW;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzDpB,OAAA;YACEuB,IAAI,EAAEpB,KAAK,CAACqB,WAAW,IAAI,GAAI;YAC/BC,MAAM,EAAC,QAAQ;YACfC,GAAG,EAAC,qBAAqB;YACzBX,SAAS,EAAC,0CAA0C;YAAAC,QAAA,EACrD;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,gBAENpB,OAAA;UAAAgB,QAAA,EAAG;QAAyB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAChC,eACDpB,OAAA,CAACH,MAAM;UAACkB,SAAS,EAAC,MAAM;UAACY,OAAO,EAAEA,CAAA,KAAMC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAE;UAAAd,QAAA,EAAC;QAElE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAClB,EAAA,CAlDID,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAoDlB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}