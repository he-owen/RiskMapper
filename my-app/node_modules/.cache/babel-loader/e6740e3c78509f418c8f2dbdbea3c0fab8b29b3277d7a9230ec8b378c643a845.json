{"ast":null,"code":"var _jsxFileName = \"/Users/saakethpula/Documents/HenHacks 2025/henhacks2025/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GOOGLE_MAPS_API_KEY = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\nconst loadGoogleMapsScript = () => {\n  return new Promise((resolve, reject) => {\n    if (window.google && window.google.maps) {\n      resolve();\n      return;\n    }\n    const existingScript = document.getElementById(\"googleMaps\");\n    if (!existingScript) {\n      const script = document.createElement(\"script\");\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}`;\n      script.id = \"googleMaps\";\n      script.async = true;\n      script.defer = true;\n      script.onload = () => {\n        if (window.google && window.google.maps) {\n          resolve();\n        } else {\n          reject(new Error(\"Google Maps failed to load.\"));\n          const geocodeAddress = address => {\n            const geocoder = new google.maps.Geocoder();\n            geocoder.geocode({\n              address\n            }, (results, status) => {\n              if (status === \"OK\" && results[0]) {\n                const location = results[0].geometry.location;\n                if (mapInstanceRef.current) {\n                  mapInstanceRef.current.setCenter(location);\n                  mapInstanceRef.current.setZoom(14);\n\n                  // Remove old marker\n                  if (markerRef.current) {\n                    markerRef.current.setMap(null);\n                  }\n\n                  // Create new marker\n                  markerRef.current = new google.maps.Marker({\n                    position: location,\n                    map: mapInstanceRef.current,\n                    title: address\n                  });\n                }\n              } else {\n                alert(\"Geocode was not successful for the following reason: \" + status);\n              }\n            });\n          };\n          const promptForAddress = () => {\n            const address = prompt(\"Could not get location. Please enter your address:\");\n            if (address) {\n              geocodeAddress(address);\n            }\n          };\n          script.onerror = () => {\n            reject(new Error(\"Failed to load Google Maps script.\"));\n            promptForAddress();\n          };\n        }\n      };\n      script.onerror = () => reject(new Error(\"Failed to load Google Maps script.\"));\n      document.body.appendChild(script);\n    } else {\n      existingScript.onload = () => resolve();\n    }\n  });\n};\nconst App = () => {\n  _s();\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markerRef = useRef(null);\n  useEffect(() => {\n    loadGoogleMapsScript().then(() => {\n      setMapLoaded(true);\n    }).catch(error => console.error(error));\n  }, []);\n  useEffect(() => {\n    if (mapLoaded && mapRef.current) {\n      mapInstanceRef.current = new google.maps.Map(mapRef.current, {\n        center: {\n          lat: 37.7749,\n          lng: -122.4194\n        },\n        // Default: San Francisco\n        zoom: 10\n      });\n    }\n  }, [mapLoaded]);\n  const locateUser = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const userLocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        if (mapInstanceRef.current) {\n          mapInstanceRef.current.setCenter(userLocation);\n          mapInstanceRef.current.setZoom(14);\n\n          // Remove old marker\n          if (markerRef.current) {\n            markerRef.current.setMap(null);\n          }\n\n          // Create new marker\n          markerRef.current = new google.maps.Marker({\n            position: userLocation,\n            map: mapInstanceRef.current,\n            title: \"You are here!\"\n          });\n        }\n      }, () => alert(\"Error: Could not get location\"));\n    } else {\n      alert(\"Geolocation is not supported by your browser.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Google Maps in React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: locateUser,\n      style: {\n        marginBottom: \"10px\",\n        padding: \"10px\"\n      },\n      children: \"Find My Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        height: \"500px\",\n        width: \"50%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"MyQIeN64UHxLG87fQrn59zb3zzA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","GOOGLE_MAPS_API_KEY","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","loadGoogleMapsScript","Promise","resolve","reject","window","google","maps","existingScript","document","getElementById","script","createElement","src","id","async","defer","onload","Error","geocodeAddress","address","geocoder","Geocoder","geocode","results","status","location","geometry","mapInstanceRef","current","setCenter","setZoom","markerRef","setMap","Marker","position","map","title","alert","promptForAddress","prompt","onerror","body","appendChild","App","_s","mapLoaded","setMapLoaded","mapRef","then","catch","error","console","Map","center","lat","lng","zoom","locateUser","navigator","geolocation","getCurrentPosition","userLocation","coords","latitude","longitude","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginBottom","padding","ref","height","width","_c","$RefreshReg$"],"sources":["/Users/saakethpula/Documents/HenHacks 2025/henhacks2025/my-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nconst GOOGLE_MAPS_API_KEY = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n\nconst loadGoogleMapsScript = (): Promise<void> => {\n  return new Promise((resolve, reject) => {\n    if (window.google && window.google.maps) {\n      resolve();\n      return;\n    }\n\n    const existingScript = document.getElementById(\"googleMaps\");\n    if (!existingScript) {\n      const script = document.createElement(\"script\");\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}`;\n      script.id = \"googleMaps\";\n      script.async = true;\n      script.defer = true;\n      script.onload = () => {\n        if (window.google && window.google.maps) {\n          resolve();\n        } else {\n          reject(new Error(\"Google Maps failed to load.\"));\n          const geocodeAddress = (address: string) => {\n            const geocoder = new google.maps.Geocoder();\n            geocoder.geocode({ address }, (results, status) => {\n              if (status === \"OK\" && results[0]) {\n                const location = results[0].geometry.location;\n                if (mapInstanceRef.current) {\n                  mapInstanceRef.current.setCenter(location);\n                  mapInstanceRef.current.setZoom(14);\n\n                  // Remove old marker\n                  if (markerRef.current) {\n                    markerRef.current.setMap(null);\n                  }\n\n                  // Create new marker\n                  markerRef.current = new google.maps.Marker({\n                    position: location,\n                    map: mapInstanceRef.current,\n                    title: address,\n                  });\n                }\n              } else {\n                alert(\"Geocode was not successful for the following reason: \" + status);\n              }\n            });\n          };\n\n          const promptForAddress = () => {\n            const address = prompt(\"Could not get location. Please enter your address:\");\n            if (address) {\n              geocodeAddress(address);\n            }\n          };\n\n          script.onerror = () => {\n            reject(new Error(\"Failed to load Google Maps script.\"));\n            promptForAddress();\n          };\n        }\n      };\n      script.onerror = () => reject(new Error(\"Failed to load Google Maps script.\"));\n      document.body.appendChild(script);\n    } else {\n      existingScript.onload = () => resolve();\n    }\n  });\n};\n\nconst App = () => {\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const mapRef = useRef<HTMLDivElement | null>(null);\n  const mapInstanceRef = useRef<google.maps.Map | null>(null);\n  const markerRef = useRef<google.maps.Marker | null>(null);\n\n  useEffect(() => {\n    loadGoogleMapsScript()\n      .then(() => {\n        setMapLoaded(true);\n      })\n      .catch((error) => console.error(error));\n  }, []);\n\n  useEffect(() => {\n    if (mapLoaded && mapRef.current) {\n      mapInstanceRef.current = new google.maps.Map(mapRef.current, {\n        center: { lat: 37.7749, lng: -122.4194 }, // Default: San Francisco\n        zoom: 10,\n      });\n    }\n  }, [mapLoaded]);\n\n  const locateUser = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const userLocation = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          };\n          if (mapInstanceRef.current) {\n            mapInstanceRef.current.setCenter(userLocation);\n            mapInstanceRef.current.setZoom(14);\n\n            // Remove old marker\n            if (markerRef.current) {\n              markerRef.current.setMap(null);\n            }\n\n            // Create new marker\n            markerRef.current = new google.maps.Marker({\n              position: userLocation,\n              map: mapInstanceRef.current,\n              title: \"You are here!\",\n            });\n          }\n        },\n        () => alert(\"Error: Could not get location\")\n      );\n    } else {\n      alert(\"Geolocation is not supported by your browser.\");\n    }\n  };\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h1>Google Maps in React</h1>\n      <button onClick={locateUser} style={{ marginBottom: \"10px\", padding: \"10px\" }}>\n        Find My Location\n      </button>\n      <div ref={mapRef} style={{ height: \"500px\", width: \"50%\" }}></div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}