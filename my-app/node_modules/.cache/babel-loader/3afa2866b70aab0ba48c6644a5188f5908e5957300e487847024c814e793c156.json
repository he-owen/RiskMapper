{"ast":null,"code":"var _jsxFileName = \"/Users/saakethpula/Documents/HenHacks 2025/henhacks2025/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n// Load the Google Maps script dynamically\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loadGoogleMapsScript = callback => {\n  const existingScript = document.getElementById('googleMaps');\n  if (!existingScript) {\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&callback=initMap`;\n    script.id = 'googleMaps';\n    document.body.appendChild(script);\n    script.onload = () => {\n      if (callback) callback();\n    };\n  }\n  if (existingScript && callback) callback();\n};\n\n// Note: This example requires that you consent to location sharing when\n// prompted by your browser. If you see the error \"The Geolocation service\n// failed.\", it means you probably did not give permission for the browser to\n// locate you.\nlet map, infoWindow;\nfunction initMap() {\n  map = new google.maps.Map(document.getElementById(\"map\"), {\n    center: {\n      lat: -34.397,\n      lng: 150.644\n    },\n    zoom: 6\n  });\n  infoWindow = new google.maps.InfoWindow();\n  const locationButton = document.createElement(\"button\");\n  locationButton.textContent = \"Pan to Current Location\";\n  locationButton.classList.add(\"custom-map-control-button\");\n  map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);\n  locationButton.addEventListener(\"click\", () => {\n    // Try HTML5 geolocation.\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const pos = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        infoWindow.setPosition(pos);\n        infoWindow.setContent(\"Location found.\");\n        infoWindow.open(map);\n        map.setCenter(pos);\n      }, () => {\n        handleLocationError(true, infoWindow, map.getCenter());\n      });\n    } else {\n      // Browser doesn't support Geolocation\n      handleLocationError(false, infoWindow, map.getCenter());\n    }\n  });\n}\nfunction handleLocationError(browserHasGeolocation, infoWindow, pos) {\n  infoWindow.setPosition(pos);\n  const errorMessage = browserHasGeolocation ? \"Error: The Geolocation service failed.\" : \"Error: Your browser doesn't support geolocation.\";\n  infoWindow.setContent(errorMessage);\n  infoWindow.open(map);\n}\nwindow.initMap = initMap;\nfunction App() {\n  _s();\n  useEffect(() => {\n    loadGoogleMapsScript(() => {\n      console.log('Google Maps script loaded successfully');\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.tsx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        height: '500px',\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","logo","jsxDEV","_jsxDEV","loadGoogleMapsScript","callback","existingScript","document","getElementById","script","createElement","src","id","body","appendChild","onload","map","infoWindow","initMap","google","maps","Map","center","lat","lng","zoom","InfoWindow","locationButton","textContent","classList","add","controls","ControlPosition","TOP_CENTER","push","addEventListener","navigator","geolocation","getCurrentPosition","position","pos","coords","latitude","longitude","setPosition","setContent","open","setCenter","handleLocationError","getCenter","browserHasGeolocation","errorMessage","window","App","_s","console","log","className","children","alt","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","style","height","width","_c","$RefreshReg$"],"sources":["/Users/saakethpula/Documents/HenHacks 2025/henhacks2025/my-app/src/App.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n// Load the Google Maps script dynamically\nconst loadGoogleMapsScript = (callback: () => void) => {\n  const existingScript = document.getElementById('googleMaps');\n  if (!existingScript) {\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&callback=initMap`;\n    script.id = 'googleMaps';\n    document.body.appendChild(script);\n    script.onload = () => {\n      if (callback) callback();\n    };\n  }\n  if (existingScript && callback) callback();\n};\n\n// Note: This example requires that you consent to location sharing when\n// prompted by your browser. If you see the error \"The Geolocation service\n// failed.\", it means you probably did not give permission for the browser to\n// locate you.\nlet map: google.maps.Map, infoWindow: google.maps.InfoWindow;\n\nfunction initMap(): void {\n  map = new google.maps.Map(document.getElementById(\"map\") as HTMLElement, {\n    center: { lat: -34.397, lng: 150.644 },\n    zoom: 6,\n  });\n  infoWindow = new google.maps.InfoWindow();\n\n  const locationButton = document.createElement(\"button\");\n\n  locationButton.textContent = \"Pan to Current Location\";\n  locationButton.classList.add(\"custom-map-control-button\");\n\n  map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);\n\n  locationButton.addEventListener(\"click\", () => {\n    // Try HTML5 geolocation.\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position: GeolocationPosition) => {\n          const pos = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          };\n\n          infoWindow.setPosition(pos);\n          infoWindow.setContent(\"Location found.\");\n          infoWindow.open(map);\n          map.setCenter(pos);\n        },\n        () => {\n          handleLocationError(true, infoWindow, map.getCenter()!);\n        }\n      );\n    } else {\n      // Browser doesn't support Geolocation\n      handleLocationError(false, infoWindow, map.getCenter()!);\n    }\n  });\n}\n\nfunction handleLocationError(\n  browserHasGeolocation: boolean,\n  infoWindow: google.maps.InfoWindow,\n  pos: google.maps.LatLng\n) {\n  infoWindow.setPosition(pos);\n  const errorMessage = browserHasGeolocation\n    ? \"Error: The Geolocation service failed.\"\n    : \"Error: Your browser doesn't support geolocation.\";\n  infoWindow.setContent(errorMessage);\n  infoWindow.open(map);\n}\n\ndeclare global {\n  interface Window {\n    initMap: () => void;\n  }\n}\nwindow.initMap = initMap;\n\nfunction App() {\n  useEffect(() => {\n    loadGoogleMapsScript(() => {\n      console.log('Google Maps script loaded successfully');\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      <div id=\"map\" style={{ height: '500px', width: '100%' }}></div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;;AAElB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,oBAAoB,GAAIC,QAAoB,IAAK;EACrD,MAAMC,cAAc,GAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;EAC5D,IAAI,CAACF,cAAc,EAAE;IACnB,MAAMG,MAAM,GAAGF,QAAQ,CAACG,aAAa,CAAC,QAAQ,CAAC;IAC/CD,MAAM,CAACE,GAAG,GAAG,2EAA2E;IACxFF,MAAM,CAACG,EAAE,GAAG,YAAY;IACxBL,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACL,MAAM,CAAC;IACjCA,MAAM,CAACM,MAAM,GAAG,MAAM;MACpB,IAAIV,QAAQ,EAAEA,QAAQ,CAAC,CAAC;IAC1B,CAAC;EACH;EACA,IAAIC,cAAc,IAAID,QAAQ,EAAEA,QAAQ,CAAC,CAAC;AAC5C,CAAC;;AAED;AACA;AACA;AACA;AACA,IAAIW,GAAoB,EAAEC,UAAkC;AAE5D,SAASC,OAAOA,CAAA,EAAS;EACvBF,GAAG,GAAG,IAAIG,MAAM,CAACC,IAAI,CAACC,GAAG,CAACd,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,EAAiB;IACvEc,MAAM,EAAE;MAAEC,GAAG,EAAE,CAAC,MAAM;MAAEC,GAAG,EAAE;IAAQ,CAAC;IACtCC,IAAI,EAAE;EACR,CAAC,CAAC;EACFR,UAAU,GAAG,IAAIE,MAAM,CAACC,IAAI,CAACM,UAAU,CAAC,CAAC;EAEzC,MAAMC,cAAc,GAAGpB,QAAQ,CAACG,aAAa,CAAC,QAAQ,CAAC;EAEvDiB,cAAc,CAACC,WAAW,GAAG,yBAAyB;EACtDD,cAAc,CAACE,SAAS,CAACC,GAAG,CAAC,2BAA2B,CAAC;EAEzDd,GAAG,CAACe,QAAQ,CAACZ,MAAM,CAACC,IAAI,CAACY,eAAe,CAACC,UAAU,CAAC,CAACC,IAAI,CAACP,cAAc,CAAC;EAEzEA,cAAc,CAACQ,gBAAgB,CAAC,OAAO,EAAE,MAAM;IAC7C;IACA,IAAIC,SAAS,CAACC,WAAW,EAAE;MACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAA6B,IAAK;QACjC,MAAMC,GAAG,GAAG;UACVjB,GAAG,EAAEgB,QAAQ,CAACE,MAAM,CAACC,QAAQ;UAC7BlB,GAAG,EAAEe,QAAQ,CAACE,MAAM,CAACE;QACvB,CAAC;QAED1B,UAAU,CAAC2B,WAAW,CAACJ,GAAG,CAAC;QAC3BvB,UAAU,CAAC4B,UAAU,CAAC,iBAAiB,CAAC;QACxC5B,UAAU,CAAC6B,IAAI,CAAC9B,GAAG,CAAC;QACpBA,GAAG,CAAC+B,SAAS,CAACP,GAAG,CAAC;MACpB,CAAC,EACD,MAAM;QACJQ,mBAAmB,CAAC,IAAI,EAAE/B,UAAU,EAAED,GAAG,CAACiC,SAAS,CAAC,CAAE,CAAC;MACzD,CACF,CAAC;IACH,CAAC,MAAM;MACL;MACAD,mBAAmB,CAAC,KAAK,EAAE/B,UAAU,EAAED,GAAG,CAACiC,SAAS,CAAC,CAAE,CAAC;IAC1D;EACF,CAAC,CAAC;AACJ;AAEA,SAASD,mBAAmBA,CAC1BE,qBAA8B,EAC9BjC,UAAkC,EAClCuB,GAAuB,EACvB;EACAvB,UAAU,CAAC2B,WAAW,CAACJ,GAAG,CAAC;EAC3B,MAAMW,YAAY,GAAGD,qBAAqB,GACtC,wCAAwC,GACxC,kDAAkD;EACtDjC,UAAU,CAAC4B,UAAU,CAACM,YAAY,CAAC;EACnClC,UAAU,CAAC6B,IAAI,CAAC9B,GAAG,CAAC;AACtB;AAOAoC,MAAM,CAAClC,OAAO,GAAGA,OAAO;AAExB,SAASmC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACbtD,SAAS,CAAC,MAAM;IACdI,oBAAoB,CAAC,MAAM;MACzBmD,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IACvD,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErD,OAAA;IAAKsD,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvD,OAAA;MAAQsD,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BvD,OAAA;QAAKQ,GAAG,EAAEV,IAAK;QAACwD,SAAS,EAAC,UAAU;QAACE,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClD5D,OAAA;QAAAuD,QAAA,GAAG,OACI,eAAAvD,OAAA;UAAAuD,QAAA,EAAM;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,wBAC/B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJ5D,OAAA;QACEsD,SAAS,EAAC,UAAU;QACpBO,IAAI,EAAC,qBAAqB;QAC1BC,MAAM,EAAC,QAAQ;QACfC,GAAG,EAAC,qBAAqB;QAAAR,QAAA,EAC1B;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACT5D,OAAA;MAAKS,EAAE,EAAC,KAAK;MAACuD,KAAK,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAO;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV;AAACT,EAAA,CA1BQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}