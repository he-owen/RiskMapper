{"ast":null,"code":"var _jsxFileName = \"/Users/saakethpula/Documents/HenHacks 2025/henhacks2025/my-app/src/Map.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GOOGLE_MAPS_API_KEY = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\nconst loadGoogleMapsScript = () => {\n  return new Promise((resolve, reject) => {\n    if (window.google && window.google.maps) {\n      resolve();\n      return;\n    }\n    const existingScript = document.getElementById(\"googleMaps\");\n    if (!existingScript) {\n      const script = document.createElement(\"script\");\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}`;\n      script.id = \"googleMaps\";\n      script.async = true;\n      script.defer = true;\n      script.onload = () => {\n        if (window.google && window.google.maps) {\n          resolve();\n        } else {\n          reject(new Error(\"Google Maps failed to load.\"));\n        }\n      };\n      script.onerror = () => reject(new Error(\"Failed to load Google Maps script.\"));\n      document.body.appendChild(script);\n    } else {\n      existingScript.onload = () => resolve();\n    }\n  });\n};\nconst Map = () => {\n  _s();\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markerRef = useRef(null);\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    loadGoogleMapsScript().then(() => setMapLoaded(true)).catch(error => console.error(error));\n  }, []);\n  useEffect(() => {\n    if (mapLoaded && mapRef.current) {\n      mapInstanceRef.current = new google.maps.Map(mapRef.current, {\n        center: {\n          lat: 37.7749,\n          lng: -122.4194\n        },\n        // Default: San Francisco\n        zoom: 10\n      });\n    }\n  }, [mapLoaded]);\n  const locateUser = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const userLocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        if (mapInstanceRef.current) {\n          mapInstanceRef.current.setCenter(userLocation);\n          mapInstanceRef.current.setZoom(14);\n\n          // Remove old marker\n          if (markerRef.current) {\n            markerRef.current.setMap(null);\n          }\n\n          // Create new marker\n          markerRef.current = new google.maps.Marker({\n            position: userLocation,\n            map: mapInstanceRef.current,\n            title: \"You are here!\"\n          });\n\n          // Fetch hospitals from FastAPI backend\n          try {\n            const response = await fetch(`http://127.0.0.1:8000/hospitals/?lat=${userLocation.lat}&lng=${userLocation.lng}&radius=10000`);\n            const data = await response.json();\n            setData({\n              hospitals: data.hospitals\n            });\n            console.log(\"Hospitals:\", data.hospitals);\n          } catch (error) {\n            console.error(\"Error fetching hospitals:\", error);\n          }\n        }\n      }, () => {\n        alert(\"Error: Could not get location. Please enter your location manually.\");\n      });\n    } else {\n      alert(\"Geolocation is not supported by your browser.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        height: \"500px\",\n        width: \"50%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: locateUser,\n      style: {\n        marginTop: \"10px\",\n        padding: \"10px\"\n      },\n      children: \"Find My Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), data && data.hospitals && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Nearby Hospitals:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: data.hospitals.slice(0, 2).map((hospital, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: hospital.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 57\n          }, this), hospital.address, hospital.distance_miles && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 55\n            }, this), hospital.distance_miles]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"kXXnx5nAKPoH+3NCm0F8kp6ez/0=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","GOOGLE_MAPS_API_KEY","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","loadGoogleMapsScript","Promise","resolve","reject","window","google","maps","existingScript","document","getElementById","script","createElement","src","id","async","defer","onload","Error","onerror","body","appendChild","Map","_s","mapLoaded","setMapLoaded","mapRef","mapInstanceRef","markerRef","data","setData","then","catch","error","console","current","center","lat","lng","zoom","locateUser","navigator","geolocation","getCurrentPosition","position","userLocation","coords","latitude","longitude","setCenter","setZoom","setMap","Marker","map","title","response","fetch","json","hospitals","log","alert","style","textAlign","children","ref","height","width","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginTop","padding","slice","hospital","index","name","address","distance_miles","_c","$RefreshReg$"],"sources":["/Users/saakethpula/Documents/HenHacks 2025/henhacks2025/my-app/src/Map.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nconst GOOGLE_MAPS_API_KEY = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n\nconst loadGoogleMapsScript = (): Promise<void> => {\n  return new Promise((resolve, reject) => {\n    if (window.google && window.google.maps) {\n      resolve();\n      return;\n    }\n\n    const existingScript = document.getElementById(\"googleMaps\");\n    if (!existingScript) {\n      const script = document.createElement(\"script\");\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}`;\n      script.id = \"googleMaps\";\n      script.async = true;\n      script.defer = true;\n      script.onload = () => {\n        if (window.google && window.google.maps) {\n          resolve();\n        } else {\n          reject(new Error(\"Google Maps failed to load.\"));\n        }\n      };\n      script.onerror = () => reject(new Error(\"Failed to load Google Maps script.\"));\n      document.body.appendChild(script);\n    } else {\n      existingScript.onload = () => resolve();\n    }\n  });\n};\n\nconst Map: React.FC = () => {\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const mapRef = useRef<HTMLDivElement | null>(null);\n  const mapInstanceRef = useRef<google.maps.Map | null>(null);\n  const markerRef = useRef<google.maps.Marker | null>(null);\n  const [data, setData] = useState<{ hospitals: any[] } | null>(null);\n\n  useEffect(() => {\n    loadGoogleMapsScript()\n      .then(() => setMapLoaded(true))\n      .catch((error) => console.error(error));\n  }, []);\n\n  useEffect(() => {\n    if (mapLoaded && mapRef.current) {\n      mapInstanceRef.current = new google.maps.Map(mapRef.current, {\n        center: { lat: 37.7749, lng: -122.4194 }, // Default: San Francisco\n        zoom: 10,\n      });\n    }\n  }, [mapLoaded]);\n\n  const locateUser = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        async (position) => {\n          const userLocation = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          };\n  \n          if (mapInstanceRef.current) {\n            mapInstanceRef.current.setCenter(userLocation);\n            mapInstanceRef.current.setZoom(14);\n  \n            // Remove old marker\n            if (markerRef.current) {\n              markerRef.current.setMap(null);\n            }\n  \n            // Create new marker\n            markerRef.current = new google.maps.Marker({\n              position: userLocation,\n              map: mapInstanceRef.current,\n              title: \"You are here!\",\n            });\n  \n            // Fetch hospitals from FastAPI backend\n            try {\n              const response = await fetch(\n                `http://127.0.0.1:8000/hospitals/?lat=${userLocation.lat}&lng=${userLocation.lng}&radius=10000`\n              );\n              const data = await response.json();\n              setData({ hospitals: data.hospitals });\n              console.log(\"Hospitals:\", data.hospitals);\n            } catch (error) {\n              console.error(\"Error fetching hospitals:\", error);\n            }\n          }\n        },\n        () => {\n          alert(\"Error: Could not get location. Please enter your location manually.\");\n        }\n      );\n    } else {\n      alert(\"Geolocation is not supported by your browser.\");\n    }\n  };\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <div ref={mapRef} style={{ height: \"500px\", width: \"50%\" }}></div>\n      <button onClick={locateUser} style={{ marginTop: \"10px\", padding: \"10px\" }}>\n        Find My Location\n      </button>\n    {data && data.hospitals && (\n        <div style={{ marginTop: \"20px\" }}>\n            <h3>Nearby Hospitals:</h3>\n            <ul>\n                {data.hospitals.slice(0, 2).map((hospital: any, index: number) => (\n                    <li key={index}>\n                        <strong>{hospital.name}</strong><br />\n                        {hospital.address}\n                        {hospital.distance_miles && <><br />{hospital.distance_miles}</>}\n                        \n                        <br />\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )}\n    </div>\n  );\n};\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}