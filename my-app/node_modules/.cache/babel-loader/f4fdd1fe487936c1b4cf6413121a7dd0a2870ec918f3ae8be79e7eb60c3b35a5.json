{"ast":null,"code":"var _jsxFileName = \"/Users/saakethpula/Documents/HenHacks 2025/henhacks2025/my-app/src/Map.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GOOGLE_MAPS_API_KEY = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\nconst loadGoogleMapsScript = () => {\n  return new Promise((resolve, reject) => {\n    if (window.google && window.google.maps) {\n      resolve();\n      return;\n    }\n    const existingScript = document.getElementById(\"googleMaps\");\n    if (!existingScript) {\n      const script = document.createElement(\"script\");\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}`;\n      script.id = \"googleMaps\";\n      script.async = true;\n      script.defer = true;\n      script.onload = () => {\n        if (window.google && window.google.maps) {\n          resolve();\n        } else {\n          reject(new Error(\"Google Maps failed to load.\"));\n        }\n      };\n      script.onerror = () => reject(new Error(\"Failed to load Google Maps script.\"));\n      document.body.appendChild(script);\n    } else {\n      existingScript.onload = () => resolve();\n    }\n  });\n};\nconst Map = () => {\n  _s();\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markerRef = useRef(null);\n  useEffect(() => {\n    loadGoogleMapsScript().then(() => setMapLoaded(true)).catch(error => console.error(error));\n  }, []);\n  useEffect(() => {\n    if (mapLoaded && mapRef.current) {\n      mapInstanceRef.current = new google.maps.Map(mapRef.current, {\n        center: {\n          lat: 37.7749,\n          lng: -122.4194\n        },\n        // Default: San Francisco\n        zoom: 10\n      });\n    }\n  }, [mapLoaded]);\n  const locateUser = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const userLocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        if (mapInstanceRef.current) {\n          mapInstanceRef.current.setCenter(userLocation);\n          mapInstanceRef.current.setZoom(14);\n\n          // Remove old marker\n          if (markerRef.current) {\n            markerRef.current.setMap(null);\n          }\n\n          // Create new marker\n          markerRef.current = new google.maps.Marker({\n            position: userLocation,\n            map: mapInstanceRef.current,\n            title: \"You are here!\"\n          });\n\n          // Fetch hospitals from FastAPI backend\n          try {\n            const response = await fetch(`http://127.0.0.1:8000/hospitals/?lat=${userLocation.lat}&lng=${userLocation.lng}&radius=10000`);\n            const data = await response.json();\n            console.log(\"Hospitals:\", data.hospitals);\n          } catch (error) {\n            console.error(\"Error fetching hospitals:\", error);\n          }\n        }\n      }, () => {\n        alert(\"Error: Could not get location. Please enter your location manually.\");\n      });\n    } else {\n      alert(\"Geolocation is not supported by your browser.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        height: \"500px\",\n        width: \"50%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: locateUser,\n      style: {\n        marginTop: \"10px\",\n        padding: \"10px\"\n      },\n      children: \"Find My Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.hospitals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"MyQIeN64UHxLG87fQrn59zb3zzA=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","GOOGLE_MAPS_API_KEY","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","loadGoogleMapsScript","Promise","resolve","reject","window","google","maps","existingScript","document","getElementById","script","createElement","src","id","async","defer","onload","Error","onerror","body","appendChild","Map","_s","mapLoaded","setMapLoaded","mapRef","mapInstanceRef","markerRef","then","catch","error","console","current","center","lat","lng","zoom","locateUser","navigator","geolocation","getCurrentPosition","position","userLocation","coords","latitude","longitude","setCenter","setZoom","setMap","Marker","map","title","response","fetch","data","json","log","hospitals","alert","style","textAlign","children","ref","height","width","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginTop","padding","_c","$RefreshReg$"],"sources":["/Users/saakethpula/Documents/HenHacks 2025/henhacks2025/my-app/src/Map.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nconst GOOGLE_MAPS_API_KEY = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n\nconst loadGoogleMapsScript = (): Promise<void> => {\n  return new Promise((resolve, reject) => {\n    if (window.google && window.google.maps) {\n      resolve();\n      return;\n    }\n\n    const existingScript = document.getElementById(\"googleMaps\");\n    if (!existingScript) {\n      const script = document.createElement(\"script\");\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}`;\n      script.id = \"googleMaps\";\n      script.async = true;\n      script.defer = true;\n      script.onload = () => {\n        if (window.google && window.google.maps) {\n          resolve();\n        } else {\n          reject(new Error(\"Google Maps failed to load.\"));\n        }\n      };\n      script.onerror = () => reject(new Error(\"Failed to load Google Maps script.\"));\n      document.body.appendChild(script);\n    } else {\n      existingScript.onload = () => resolve();\n    }\n  });\n};\n\nconst Map: React.FC = () => {\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const mapRef = useRef<HTMLDivElement | null>(null);\n  const mapInstanceRef = useRef<google.maps.Map | null>(null);\n  const markerRef = useRef<google.maps.Marker | null>(null);\n\n  useEffect(() => {\n    loadGoogleMapsScript()\n      .then(() => setMapLoaded(true))\n      .catch((error) => console.error(error));\n  }, []);\n\n  useEffect(() => {\n    if (mapLoaded && mapRef.current) {\n      mapInstanceRef.current = new google.maps.Map(mapRef.current, {\n        center: { lat: 37.7749, lng: -122.4194 }, // Default: San Francisco\n        zoom: 10,\n      });\n    }\n  }, [mapLoaded]);\n\n  const locateUser = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        async (position) => {\n          const userLocation = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          };\n  \n          if (mapInstanceRef.current) {\n            mapInstanceRef.current.setCenter(userLocation);\n            mapInstanceRef.current.setZoom(14);\n  \n            // Remove old marker\n            if (markerRef.current) {\n              markerRef.current.setMap(null);\n            }\n  \n            // Create new marker\n            markerRef.current = new google.maps.Marker({\n              position: userLocation,\n              map: mapInstanceRef.current,\n              title: \"You are here!\",\n            });\n  \n            // Fetch hospitals from FastAPI backend\n            try {\n              const response = await fetch(\n                `http://127.0.0.1:8000/hospitals/?lat=${userLocation.lat}&lng=${userLocation.lng}&radius=10000`\n              );\n              const data = await response.json();\n  \n              console.log(\"Hospitals:\", data.hospitals);\n            } catch (error) {\n              console.error(\"Error fetching hospitals:\", error);\n            }\n          }\n        },\n        () => {\n          alert(\"Error: Could not get location. Please enter your location manually.\");\n        }\n      );\n    } else {\n      alert(\"Geolocation is not supported by your browser.\");\n    }\n  };\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <div ref={mapRef} style={{ height: \"500px\", width: \"50%\" }}></div>\n      <button onClick={locateUser} style={{ marginTop: \"10px\", padding: \"10px\" }}>\n        Find My Location\n      </button>\n      <div>{data.hospitals}</div>\n    </div>\n  );\n};\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}