{"ast":null,"code":"var _jsxFileName = \"/Users/saakethpula/Documents/HenHacks 2025/henhacks2025/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GOOGLE_MAPS_API_KEY = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\nconst loadGoogleMapsScript = callback => {\n  if (window.google && window.google.maps) {\n    callback();\n    return;\n  }\n  if (!document.getElementById(\"googleMaps\")) {\n    const script = document.createElement(\"script\");\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}&callback=initMap&loading=async`;\n    script.id = \"googleMaps\";\n    script.async = true;\n    script.defer = true;\n    document.body.appendChild(script);\n    script.onload = callback;\n  } else if (document.getElementById(\"googleMaps\")) {\n    document.getElementById(\"googleMaps\").onload = callback;\n  }\n};\nconst App = () => {\n  _s();\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markerRef = useRef(null);\n  useEffect(() => {\n    loadGoogleMapsScript(() => {\n      setMapLoaded(true);\n    });\n  }, []);\n  useEffect(() => {\n    if (mapLoaded && mapRef.current) {\n      mapInstanceRef.current = new google.maps.Map(mapRef.current, {\n        center: {\n          lat: 37.7749,\n          lng: -122.4194\n        },\n        // Default: San Francisco\n        zoom: 10\n      });\n    }\n  }, [mapLoaded]);\n  const locateUser = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const userLocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        if (mapInstanceRef.current) {\n          mapInstanceRef.current.setCenter(userLocation);\n          mapInstanceRef.current.setZoom(14);\n\n          // Remove old marker\n          if (markerRef.current) {\n            markerRef.current.setMap(null);\n          }\n\n          // Create new marker\n          markerRef.current = new google.maps.Marker({\n            position: userLocation,\n            map: mapInstanceRef.current,\n            title: \"You are here!\"\n          });\n        }\n      }, () => alert(\"Error: Could not get location\"));\n    } else {\n      alert(\"Geolocation is not supported by your browser.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Google Maps in React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: locateUser,\n      style: {\n        marginBottom: \"10px\",\n        padding: \"10px\"\n      },\n      children: \"Find My Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        height: \"500px\",\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"MyQIeN64UHxLG87fQrn59zb3zzA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","GOOGLE_MAPS_API_KEY","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","loadGoogleMapsScript","callback","window","google","maps","document","getElementById","script","createElement","src","id","async","defer","body","appendChild","onload","App","_s","mapLoaded","setMapLoaded","mapRef","mapInstanceRef","markerRef","current","Map","center","lat","lng","zoom","locateUser","navigator","geolocation","getCurrentPosition","position","userLocation","coords","latitude","longitude","setCenter","setZoom","setMap","Marker","map","title","alert","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginBottom","padding","ref","height","width","_c","$RefreshReg$"],"sources":["/Users/saakethpula/Documents/HenHacks 2025/henhacks2025/my-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\nconst GOOGLE_MAPS_API_KEY = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n\nconst loadGoogleMapsScript = (callback: () => void) => {\n  if (window.google && window.google.maps) {\n    callback();\n    return;\n  }\n\n  if (!document.getElementById(\"googleMaps\")) {\n    const script = document.createElement(\"script\");\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}&callback=initMap&loading=async`;\n    script.id = \"googleMaps\";\n    script.async = true;\n    script.defer = true;\n    document.body.appendChild(script);\n    script.onload = callback;\n  } else if (document.getElementById(\"googleMaps\")) {\n    (document.getElementById(\"googleMaps\") as HTMLScriptElement).onload = callback;\n  }\n};\n\ndeclare global {\n  interface Window {\n    initMap: () => void;\n  }\n}\n\nconst App = () => {\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const mapRef = useRef<HTMLDivElement | null>(null);\n  const mapInstanceRef = useRef<google.maps.Map | null>(null);\n  const markerRef = useRef<google.maps.Marker | null>(null);\n\n  useEffect(() => {\n    loadGoogleMapsScript(() => {\n      setMapLoaded(true);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (mapLoaded && mapRef.current) {\n      mapInstanceRef.current = new google.maps.Map(mapRef.current, {\n        center: { lat: 37.7749, lng: -122.4194 }, // Default: San Francisco\n        zoom: 10,\n      });\n    }\n  }, [mapLoaded]);\n\n  const locateUser = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const userLocation = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          };\n          if (mapInstanceRef.current) {\n            mapInstanceRef.current.setCenter(userLocation);\n            mapInstanceRef.current.setZoom(14);\n\n            // Remove old marker\n            if (markerRef.current) {\n              markerRef.current.setMap(null);\n            }\n\n            // Create new marker\n            markerRef.current = new google.maps.Marker({\n              position: userLocation,\n              map: mapInstanceRef.current,\n              title: \"You are here!\",\n            });\n          }\n        },\n        () => alert(\"Error: Could not get location\")\n      );\n    } else {\n      alert(\"Geolocation is not supported by your browser.\");\n    }\n  };\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h1>Google Maps in React</h1>\n      <button onClick={locateUser} style={{ marginBottom: \"10px\", padding: \"10px\" }}>\n        Find My Location\n      </button>\n      <div ref={mapRef} style={{ height: \"500px\", width: \"100%\" }}></div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}