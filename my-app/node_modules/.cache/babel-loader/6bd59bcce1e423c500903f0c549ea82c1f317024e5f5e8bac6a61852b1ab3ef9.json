{"ast":null,"code":"var _jsxFileName = \"/Users/saakethpula/Documents/HenHacks 2025/henhacks2025/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GOOGLE_MAPS_API_KEY = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\nconst loadGoogleMapsScript = () => {\n  return new Promise((resolve, reject) => {\n    if (window.google && window.google.maps) {\n      resolve();\n      return;\n    }\n    const existingScript = document.getElementById(\"googleMaps\");\n    if (!existingScript) {\n      const script = document.createElement(\"script\");\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}`;\n      script.id = \"googleMaps\";\n      script.async = true;\n      script.defer = true;\n      script.onload = () => {\n        if (window.google && window.google.maps) {\n          resolve();\n        } else {\n          reject(new Error(\"Google Maps failed to load.\"));\n        }\n      };\n      script.onerror = () => reject(new Error(\"Failed to load Google Maps script.\"));\n      document.body.appendChild(script);\n    } else {\n      existingScript.onload = () => resolve();\n    }\n  });\n};\nconst App = () => {\n  _s();\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markerRef = useRef(null);\n  useEffect(() => {\n    loadGoogleMapsScript().then(() => {\n      setMapLoaded(true);\n    }).catch(error => console.error(error));\n  }, []);\n  useEffect(() => {\n    if (mapLoaded && mapRef.current) {\n      mapInstanceRef.current = new google.maps.Map(mapRef.current, {\n        center: {\n          lat: 37.7749,\n          lng: -122.4194\n        },\n        // Default: San Francisco\n        zoom: 10\n      });\n    }\n  }, [mapLoaded]);\n  const locateUser = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const userLocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        if (mapInstanceRef.current) {\n          mapInstanceRef.current.setCenter(userLocation);\n          mapInstanceRef.current.setZoom(14);\n\n          // Remove old marker\n          if (markerRef.current) {\n            markerRef.current.setMap(null);\n          }\n\n          // Create new marker\n          markerRef.current = new google.maps.Marker({\n            position: userLocation,\n            map: mapInstanceRef.current,\n            title: \"You are here!\"\n          });\n        }\n      }, () => {\n        alert(\"Error: Could not get location. Please enter your location manually.\");\n        const locationInput = prompt(\"Enter your location (e.g., San Francisco, CA):\");\n        if (locationInput) {\n          const geocoder = new google.maps.Geocoder();\n          geocoder.geocode({\n            address: locationInput\n          }, (results, status) => {\n            if (status === \"OK\" && results && results[0]) {\n              const userLocation = results[0].geometry.location;\n              if (mapInstanceRef.current) {\n                mapInstanceRef.current.setCenter(userLocation);\n                mapInstanceRef.current.setZoom(14);\n\n                // Remove old marker\n                if (markerRef.current) {\n                  markerRef.current.setMap(null);\n                }\n\n                // Create new marker\n                markerRef.current = new google.maps.Marker({\n                  position: userLocation,\n                  map: mapInstanceRef.current,\n                  title: \"You are here!\"\n                });\n              }\n            } else {\n              alert(\"Error: Could not find the location.\");\n            }\n          });\n        }\n      });\n    } else {\n      alert(\"Geolocation is not supported by your browser.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Google Maps in React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        height: \"500px\",\n        width: \"50%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: locateUser,\n      style: {\n        marginBottom: \"10px\",\n        padding: \"10px\"\n      },\n      children: \"Find My Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"MyQIeN64UHxLG87fQrn59zb3zzA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","GOOGLE_MAPS_API_KEY","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","loadGoogleMapsScript","Promise","resolve","reject","window","google","maps","existingScript","document","getElementById","script","createElement","src","id","async","defer","onload","Error","onerror","body","appendChild","App","_s","mapLoaded","setMapLoaded","mapRef","mapInstanceRef","markerRef","then","catch","error","console","current","Map","center","lat","lng","zoom","locateUser","navigator","geolocation","getCurrentPosition","position","userLocation","coords","latitude","longitude","setCenter","setZoom","setMap","Marker","map","title","alert","locationInput","prompt","geocoder","Geocoder","geocode","address","results","status","geometry","location","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","height","width","onClick","marginBottom","padding","_c","$RefreshReg$"],"sources":["/Users/saakethpula/Documents/HenHacks 2025/henhacks2025/my-app/src/App.tsx"],"sourcesContent":["import Button from \"@mui/material/Button/Button\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst GOOGLE_MAPS_API_KEY = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n\nconst loadGoogleMapsScript = (): Promise<void> => {\n  return new Promise((resolve, reject) => {\n    if (window.google && window.google.maps) {\n      resolve();\n      return;\n    }\n\n    const existingScript = document.getElementById(\"googleMaps\");\n    if (!existingScript) {\n      const script = document.createElement(\"script\");\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}`;\n      script.id = \"googleMaps\";\n      script.async = true;\n      script.defer = true;\n      script.onload = () => {\n        if (window.google && window.google.maps) {\n          resolve();\n        } else {\n          reject(new Error(\"Google Maps failed to load.\"));\n          \n        }\n      };\n      script.onerror = () => reject(new Error(\"Failed to load Google Maps script.\"));\n      document.body.appendChild(script);\n    } else {\n      existingScript.onload = () => resolve();\n    }\n  });\n};\n\nconst App = () => {\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const mapRef = useRef<HTMLDivElement | null>(null);\n  const mapInstanceRef = useRef<google.maps.Map | null>(null);\n  const markerRef = useRef<google.maps.Marker | null>(null);\n\n  useEffect(() => {\n    loadGoogleMapsScript()\n      .then(() => {\n        setMapLoaded(true);\n      })\n      .catch((error) => console.error(error));\n  }, []);\n\n  useEffect(() => {\n    if (mapLoaded && mapRef.current) {\n      mapInstanceRef.current = new google.maps.Map(mapRef.current, {\n        center: { lat: 37.7749, lng: -122.4194 }, // Default: San Francisco\n        zoom: 10,\n      });\n    }\n  }, [mapLoaded]);\n\n  const locateUser = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const userLocation = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n          };\n          if (mapInstanceRef.current) {\n        mapInstanceRef.current.setCenter(userLocation);\n        mapInstanceRef.current.setZoom(14);\n\n        // Remove old marker\n        if (markerRef.current) {\n          markerRef.current.setMap(null);\n        }\n\n        // Create new marker\n        markerRef.current = new google.maps.Marker({\n          position: userLocation,\n          map: mapInstanceRef.current,\n          title: \"You are here!\",\n        });\n          }\n        },\n        () => {\n          alert(\"Error: Could not get location. Please enter your location manually.\");\n          const locationInput = prompt(\"Enter your location (e.g., San Francisco, CA):\");\n          if (locationInput) {\n        const geocoder = new google.maps.Geocoder();\n        geocoder.geocode({ address: locationInput }, (results, status) => {\n          if (status === \"OK\" && results && results[0]) {\n            const userLocation = results[0].geometry.location;\n            if (mapInstanceRef.current) {\n          mapInstanceRef.current.setCenter(userLocation);\n          mapInstanceRef.current.setZoom(14);\n\n          // Remove old marker\n          if (markerRef.current) {\n            markerRef.current.setMap(null);\n          }\n\n          // Create new marker\n          markerRef.current = new google.maps.Marker({\n            position: userLocation,\n            map: mapInstanceRef.current,\n            title: \"You are here!\",\n          });\n            }\n          } else {\n            alert(\"Error: Could not find the location.\");\n          }\n        });\n          }\n        }\n      );\n    } else {\n      alert(\"Geolocation is not supported by your browser.\");\n    }\n  };\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h1>Google Maps in React</h1>\n      <div ref={mapRef} style={{ height: \"500px\", width: \"50%\" }}></div>\n      <button onClick={locateUser} style={{ marginBottom: \"10px\", padding: \"10px\" }}>\n        Find My Location\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}